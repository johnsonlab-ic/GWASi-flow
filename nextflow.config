/*
 * GWASi-flow configuration file
 */

// Pipeline parameters
params {
    // Input/output options
    gwas_csv = null  // Path to CSV file with GWAS information
    outdir = 'results'  // Output directory
    genome_build = 'GRCh38'  // Default genome build

    // Example values for testing
    // gwas_csv = 'test/inputs/gwas_list.csv'
}

// Docker/Singularity container settings
process {
    container = 'ghcr.io/haglunda/gwasi-flow:latest'
}

// Enable Docker by default
docker {
    enabled = true
}

// Execution profiles
profiles {
    standard {
        process.executor = 'local'
    }
    
    slurm {
        process.executor = 'slurm'
        process.queue = 'standard'
    }

    imperial {

        docker.enabled = false
        singularity.enabled = true

        process {
            executor = 'pbspro'
            container = "docker://ghcr.io/haglunda/gwasi-flow:latest"

            // General resource requirements
            errorStrategy = 'retry'
            maxRetries = 5
            maxErrors = '-1'
            queue = { 4 * task.attempt > 8 ? 'v1_small24' : 'v1_small24' }
            cpus = { 1 * task.attempt }
            memory = { 6.GB * task.attempt }
            time = { 4.h * task.attempt }

            // Process-specific resource requirements
            withLabel:process_single {
                cpus = 1
                memory = { 6.GB * task.attempt }
                time = { 4.h * task.attempt }
            }

            withLabel:process_low {
                cpus = { 2 * task.attempt }
                memory = { 12.GB * task.attempt }
                time = { 2.h * task.attempt }
            }

            withLabel:process_medium {
                queue = 'v1_medium24'
                cpus = { 9 * task.attempt }
                memory = { 36.GB * task.attempt }
                time = { 4.h * task.attempt }
            }

            withLabel:process_high {
                queue = 'v1_medium24'
                cpus = { 12 * task.attempt }
                memory = { 72.GB * task.attempt }
                time = { 1.h * task.attempt }
            }

            withLabel:process_long {
                queue = 'v1_medium24'
                cpus = 9
                memory = 96.GB
                time = { 14.h * task.attempt }
            }

            withLabel:process_eqtl {
                queue = { 200 * task.attempt < 921 ? 'v1_medium24' : 'v1_largemem24' }
                cpus = {20 * task.attempt }
                memory = { 200.GB * task.attempt }
                time = { 0.5.h * task.attempt }
            }

            withLabel:process_high_memory {
                queue = { 200 * task.attempt < 921 ? 'v1_medium24' : 'v1_largemem24' }
                cpus = { 10 * task.attempt }
                memory = { 200.GB * task.attempt }
                time = { 4.h * task.attempt }
            }


    }
}
}

// Manifest
manifest {
    name = 'GWASi-flow'
    author = 'HaglundA'
    description = 'A Nextflow pipeline for GWAS data ingestion and processing'
    version = '0.1.0'
    homePage = 'https://github.com/HaglundA/gwasi-flow'
}
